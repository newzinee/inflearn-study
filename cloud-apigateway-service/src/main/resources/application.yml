server:
  port: 8000
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka

spring:
  application:
    name: apigateway-service
  cloud:
    gateway:
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway Global Filter
            preLogger: true
            postLogger: true
      routes:
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/user-service/login
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/user-service/users
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/user-service/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter
        - id: catalog-service
          uri: lb://catalog-service
          predicates:
            - Path=/catalog-service/**
        - id: order-service
          uri: lb://order-service
          predicates:
            - Path=/order-service/**
        - id: first-service
          uri: lb://my-first-service
          predicates:
            - Path=/first-service/**
          filters:
            - AddRequestHeader=first-request-header, first-request-header-value2
            - AddResponseHeader=first-response-header, first-response-header-value2
            - CustomFilter
        - id: second-service
          uri: lb://my-second-service
          predicates:
            - Path=/second-service/**
          filters:
            - AddRequestHeader=second-request-header, second-request-header-value2
            - AddResponseHeader=second-response-header, second-response-header-value2
            - CustomFilter
            - name: LoggingFilter
              args:
                baseMessage: LoggingFilter Hi.
                preLogger: true
                postLogger: true

token:
  secret: usertoken